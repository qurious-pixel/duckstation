name: Create rolling release

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'appveyor.yml'
      - 'scripts/*'
      - '.github/ISSUE_TEMPLATE/*'
  push:
    paths-ignore:
      - '**.md'
      - 'appveyor.yml'
      - 'scripts/*'
      - '.github/ISSUE_TEMPLATE/*'
  workflow_dispatch:

jobs:
  windows-uwp-build:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2.3.1
      with:
        fetch-depth: 0
        submodules: false

    - name: Tag as preview build
      if: github.ref == 'refs/heads/master'
      shell: cmd
      run: |
        echo #pragma once > src/scmversion/tag.h
        echo #define SCM_RELEASE_ASSET "duckstation-windows-x64-release.zip" >> src/scmversion/tag.h
        echo #define SCM_RELEASE_TAGS {"latest", "preview"} >> src/scmversion/tag.h
        echo #define SCM_RELEASE_TAG "preview" >> src/scmversion/tag.h


    - name: Tag as dev build
      if: github.ref == 'refs/heads/dev'
      shell: cmd
      run: |
        echo #pragma once > src/scmversion/tag.h
        echo #define SCM_RELEASE_ASSET "duckstation-windows-x64-release.zip" >> src/scmversion/tag.h
        echo #define SCM_RELEASE_TAGS {"latest", "preview"} >> src/scmversion/tag.h
        echo #define SCM_RELEASE_TAG "latest" >> src/scmversion/tag.h

    - name: Write signing key
      id: write_signing_key
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
      uses: timheuer/base64-to-file@v1
      with:
        fileName: 'duckstation-uwp.pfx'
        encodedString: ${{ secrets.UWP_PFX_KEY }}

    - name: Copy signing key
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
      shell: cmd
      run: |
        copy ${{ steps.write_signing_key.outputs.filePath }} src\duckstation-uwp\duckstation-uwp.pfx

    - name: Disable Appx signing
      if: github.ref != 'refs/heads/master' || github.ref != 'refs/heads/dev'
      shell: powershell
      run: |
        $pwd
        gc src\duckstation-uwp\duckstation-uwp.vcxproj -replace '<AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>', '<AppxPackageSigningEnabled>False</AppxPackageSigningEnabled>' | Out-File -encoding ASCII src\duckstation-uwp\duckstation-uwp.vcxproj
        type src\duckstation-uwp\duckstation-uwp.vcxproj
        
    - name: Restore nuget packages
      shell: cmd
      run: |
        nuget restore duckstation-uwp.sln

    - name: Compile x64 release build without bundle
      if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/dev'
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        msbuild duckstation-uwp.sln /p:Configuration="ReleaseUWP" /p:Platform="x64" /t:Build

    - name: Compile x64 release build with bundle
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
      shell: cmd
      run: |
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
        msbuild duckstation-uwp.sln /p:AppxBundle=Always /p:AppxPackageIsForStore=true /p:BuildAppxUploadPackageForUap=true /p:AppxBundlePlatforms="x64" /p:Configuration="ReleaseUWP" /p:Platform="x64" /t:Build

    - name: Grab AppX package
      shell: cmd
      run: |
        copy build\ReleaseUWP-x64\duckstation-uwp\duckstation-uwp_1.0.0.0_Bundle\duckstation-uwp_1.0.0.0_x64_ReleaseUWP.appx duckstation-uwp.appx

    - name: Export certificate
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
      shell: powershell
      run: |
        Get-PfxCertificate -FilePath .\src\duckstation-uwp\duckstation-uwp.pfx | Export-Certificate -FilePath duckstation-uwp.der -Type CERT

    - name: Upload AppX package
      uses: actions/upload-artifact@v1
      with:
        name: "windows-uwp"
        path: "duckstation-uwp.appx"

    - name: Upload certificate
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
      uses: actions/upload-artifact@v1
      with:
        name: "windows-uwp"
        path: "duckstation-uwp.der"

  create-release:
    needs: [windows-uwp-build]
    runs-on: "ubuntu-20.04"
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/uwp'
    steps:
     
      - name: Download Windows UWP Artifact
        uses: actions/download-artifact@v1
        with:
          name: "windows-uwp"

      
      - name: Create preview release
        if: github.ref == 'refs/heads/master'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "preview"
          prerelease: true
          title: "Latest Preview Build"
          files: |
            windows/duckstation-windows-x64-release.zip
            windows/duckstation-windows-x64-release-symbols.zip
            windows-arm64/duckstation-windows-arm64-release.zip
            windows-arm64/duckstation-windows-arm64-release-symbols.zip
            windows-uwp/duckstation-uwp.appx
            windows-uwp/duckstation-uwp.der
            linux-x64-appimage-nogui/duckstation-nogui-x64.AppImage
            linux-x64-appimage-nogui-zsync/duckstation-nogui-x64.AppImage.zsync
            linux-x64-appimage-qt/duckstation-qt-x64.AppImage
            linux-x64-appimage-qt-zsync/duckstation-qt-x64.AppImage.zsync
          
      - name: Create dev release
        if: github.ref == 'refs/heads/uwp'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "UWP Development Build"
          files: |
            windows/duckstation-windows-x64-release.zip
            windows/duckstation-windows-x64-release-symbols.zip
            windows-arm64/duckstation-windows-arm64-release.zip
            windows-arm64/duckstation-windows-arm64-release-symbols.zip
            windows-uwp/duckstation-uwp.appx
            windows-uwp/duckstation-uwp.der
            linux-x64-appimage-nogui/duckstation-nogui-x64.AppImage
            linux-x64-appimage-nogui-zsync/duckstation-nogui-x64.AppImage.zsync
            linux-x64-appimage-qt/duckstation-qt-x64.AppImage
            linux-x64-appimage-qt-zsync/duckstation-qt-x64.AppImage.zsync
             
