name: Create rolling release

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'appveyor.yml'
      - 'scripts/*'
      - '.github/ISSUE_TEMPLATE/*'
  push:
    paths-ignore:
      - '**.md'
      - 'appveyor.yml'
      - 'scripts/*'
      - '.github/ISSUE_TEMPLATE/*'
  workflow_dispatch:

jobs:
  linux-build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.1
      with:
        fetch-depth: 0

    - name: Install packages
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get -y install cmake ninja-build ccache libsdl2-dev libgtk-3-dev libegl1-mesa-dev libevdev-dev libgbm-dev libdrm-dev libwayland-dev libwayland-egl-backend-dev extra-cmake-modules libcurl4-gnutls-dev libxrandr-dev
        #sudo apt-get -y install cmake ninja-build ccache libsdl2-dev libgtk-3-dev qtbase5-dev qtbase5-dev-tools qtbase5-private-dev qt5-default qttools5-dev qtwayland5 libegl1-mesa-dev libevdev-dev libgbm-dev libdrm-dev libqt5waylandclient5-dev libqt5waylandcompositor5-dev libwayland-dev libwayland-egl-backend-dev extra-cmake-modules libcurl4-gnutls-dev libxrandr-dev
        #sudo apt-get -y install libfontconfig1-dev libfreetype6-dev libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-util-dev libxcb-xinerama0-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev gstreamer1.0-gl gstreamer1.0-gtk3
        
    #- name: Install QT6
    #  shell: bash
    #  env:
    #    QTVERSION: 6.2.0
    #  run: |
    #    echo "QTVERSION ${QTVERSION}"
    #    curl -sLO https://download.qt.io/official_releases/qt/6.2/6.2.0/single/qt-everywhere-src-${QTVERSION}.tar.xz
    #    tar xf qt-everywhere-src-${QTVERSION}.tar.xz
    #    cd qt-everywhere-src-${QTVERSION}
    #    ./configure -prefix /usr -bundled-xcb-xinput
    #    cmake --build .
    #    cmake --install .
    - name: Install Qt
      uses: WillBrennan/yaqti@2021.07.29
      with:
        version: '6.2.0'
        os: 'linux'
        platform: 'desktop'
        modules: 'qtwaylandcompositor'
           
    - name: Compile build
      shell: bash
      env:
        Qt6_DIR: ${{ github_workspace }}/qt/6.2.0
      run: |
        echo "HOME ${GITHUB_WORKSPACE}"
        echo "HOME ${Qt6_DIR}"
        find qt/ -iname *.cmake 
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_NOGUI_FRONTEND=ON -DBUILD_QT_FRONTEND=ON -DUSE_DRMKMS=ON -DUSE_EGL=ON -DUSE_SDL2=ON -DUSE_WAYLAND=ON -DUSE_X11=ON -G Ninja ..
        ninja
        ../scripts/generate_appimages.sh $(pwd)

    - name: Upload NoGUI AppImage
      uses: actions/upload-artifact@v1
      with:
        name: "linux-x64-appimage-nogui"
        path: "build/duckstation-nogui-x64.AppImage"

    - name: Upload NoGUI AppImage zsync
      uses: actions/upload-artifact@v1
      with:
        name: "linux-x64-appimage-nogui-zsync"
        path: "build/duckstation-nogui-x64.AppImage.zsync"

    - name: Upload Qt AppImage
      uses: actions/upload-artifact@v1
      with:
        name: "linux-x64-appimage-qt"
        path: "build/duckstation-qt-x64.AppImage"

    - name: Upload Qt AppImage zsync
      uses: actions/upload-artifact@v1
      with:
        name: "linux-x64-appimage-qt-zsync"
        path: "build/duckstation-qt-x64.AppImage.zsync"

    - name: Upload Wayland AppImage
      uses: actions/upload-artifact@v1
      with:
        name: "linux-x64-appimage-wayland"
        path: "build/duckstation-wayland-x64.AppImage"

    - name: Upload Wayland AppImage zsync
      uses: actions/upload-artifact@v1
      with:
        name: "linux-x64-appimage-wayland-zsync"
        path: "build/duckstation-wayland-x64.AppImage.zsync"
  
  create-release:
    needs: [linux-build]
    runs-on: "ubuntu-20.04"
    if: github.ref == 'refs/heads/appimage' || github.ref == 'refs/heads/QT6'
    steps:
      - name: Download NoGUI AppImage Artifact
        uses: actions/download-artifact@v1
        with:
          name: "linux-x64-appimage-nogui"

      - name: Download NoGUI AppImage zsync Artifact
        uses: actions/download-artifact@v1
        with:
          name: "linux-x64-appimage-nogui-zsync"

      - name: Download Qt AppImage Artifact
        uses: actions/download-artifact@v1
        with:
          name: "linux-x64-appimage-qt"

      - name: Download Qt AppImage zsync Artifact
        uses: actions/download-artifact@v1
        with:
          name: "linux-x64-appimage-qt-zsync"

      - name: Download Wayland AppImage Artifact
        uses: actions/download-artifact@v1
        with:
          name: "linux-x64-appimage-wayland"

      - name: Download Wayland AppImage zsync Artifact
        uses: actions/download-artifact@v1
        with:
          name: "linux-x64-appimage-wayland-zsync"
          
      - name: Create preview release
        if: github.ref == 'refs/heads/appimage'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "preview"
          prerelease: true
          title: "Latest Preview Build"
          files: |
            linux-x64-appimage-nogui/duckstation-nogui-x64.AppImage
            linux-x64-appimage-nogui-zsync/duckstation-nogui-x64.AppImage.zsync
            linux-x64-appimage-qt/duckstation-qt-x64.AppImage
            linux-x64-appimage-qt-zsync/duckstation-qt-x64.AppImage.zsync
            linux-x64-appimage-wayland/duckstation-wayland-x64.AppImage
            linux-x64-appimage-wayland-zsync/duckstation-wayland-x64.AppImage.zsync
            
      - name: Create dev release
        if: github.ref == 'refs/heads/QT6'
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "QT6 Development Build"
          files: |
            linux-x64-appimage-nogui/duckstation-nogui-x64.AppImage
            linux-x64-appimage-nogui-zsync/duckstation-nogui-x64.AppImage.zsync
            linux-x64-appimage-qt/duckstation-qt-x64.AppImage
            linux-x64-appimage-qt-zsync/duckstation-qt-x64.AppImage.zsync
            linux-x64-appimage-wayland/duckstation-wayland-x64.AppImage
            linux-x64-appimage-wayland-zsync/duckstation-wayland-x64.AppImage.zsync
